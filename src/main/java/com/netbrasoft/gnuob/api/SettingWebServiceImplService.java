package com.netbrasoft.gnuob.api;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.2-jbossorg-2 2015-10-23T20:19:34.834+02:00 Generated
 * source version: 3.1.2-jbossorg-2
 * 
 */
@WebServiceClient(name = "SettingWebServiceImplService", wsdlLocation = "http://localhost:8080/gnuob-soap/SettingWebServiceImpl?wsdl",
    targetNamespace = "http://gnuob.netbrasoft.com/")
public class SettingWebServiceImplService extends Service {

  public final static URL WSDL_LOCATION;

  public final static QName SERVICE = new QName("http://gnuob.netbrasoft.com/", "SettingWebServiceImplService");
  public final static QName SettingWebServiceImplPort = new QName("http://gnuob.netbrasoft.com/", "SettingWebServiceImplPort");

  static {
    URL url = null;
    try {
      url = new URL("http://localhost:8080/gnuob-soap/SettingWebServiceImpl?wsdl");
    } catch (MalformedURLException e) {
      java.util.logging.Logger.getLogger(SettingWebServiceImplService.class.getName()).log(java.util.logging.Level.INFO, "Can not initialize the default wsdl from {0}",
          "http://localhost:8080/gnuob-soap/SettingWebServiceImpl?wsdl");
    }
    WSDL_LOCATION = url;
  }

  public SettingWebServiceImplService(URL wsdlLocation) {
    super(wsdlLocation, SERVICE);
  }

  public SettingWebServiceImplService(URL wsdlLocation, QName serviceName) {
    super(wsdlLocation, serviceName);
  }

  public SettingWebServiceImplService() {
    super(WSDL_LOCATION, SERVICE);
  }

  public SettingWebServiceImplService(WebServiceFeature... features) {
    super(WSDL_LOCATION, SERVICE, features);
  }

  public SettingWebServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
    super(wsdlLocation, SERVICE, features);
  }

  public SettingWebServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
    super(wsdlLocation, serviceName, features);
  }

  /**
   *
   * @return returns SettingWebServiceImpl
   */
  @WebEndpoint(name = "SettingWebServiceImplPort")
  public SettingWebServiceImpl getSettingWebServiceImplPort() {
    return super.getPort(SettingWebServiceImplPort, SettingWebServiceImpl.class);
  }

  /**
   * 
   * @param features A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.
   *        Supported features not in the <code>features</code> parameter will have their default
   *        values.
   * @return returns SettingWebServiceImpl
   */
  @WebEndpoint(name = "SettingWebServiceImplPort")
  public SettingWebServiceImpl getSettingWebServiceImplPort(WebServiceFeature... features) {
    return super.getPort(SettingWebServiceImplPort, SettingWebServiceImpl.class, features);
  }

}
